// Mocks generated by Mockito 5.0.17 from annotations
// in my_instrument/test/favorite_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:my_instrument/src/data/repositories/favorite_repository.dart'
    as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [FavoriteRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteRepository extends _i1.Mock
    implements _i2.FavoriteRepository {
  MockFavoriteRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<String>> getFavorites() =>
      (super.noSuchMethod(Invocation.method(#getFavorites, []),
              returnValue: Future<List<String>>.value(<String>[]))
          as _i3.Future<List<String>>);
  @override
  _i3.Future<bool> addFavorite(String? listingId) =>
      (super.noSuchMethod(Invocation.method(#addFavorite, [listingId]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> removeFavorite(String? listingId) =>
      (super.noSuchMethod(Invocation.method(#removeFavorite, [listingId]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}
